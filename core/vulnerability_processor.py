from core.database import get_db_connection

def process_nvd_data(nvd_data):
    if not nvd_data or "vulnerabilities" not in nvd_data:
        print("No vulnerabilities key found in the response data.")
        return None

    conn = get_db_connection()
    cursor = conn.cursor()
    
    parsed_vulnerabilities = []
    for item in nvd_data["vulnerabilities"]:
        cve_item = item.get("cve", {})
        cve_id = cve_item.get("id")
        description = cve_item.get("descriptions", [{}])[0].get("value", "No description available")
        severity = cve_item.get("metrics", {}).get("cvssMetricV2", [{}])[0].get("baseSeverity", "Unknown")
        published_date = cve_item.get("published", "Unknown")
        last_modified_date = cve_item.get("lastModified", "Unknown")
        
        cursor.execute('''
            INSERT INTO vulnerabilities (cve_id, description, severity, published_date, last_modified_date)
            VALUES (?, ?, ?, ?, ?)
        ''', (cve_id, description, severity, published_date, last_modified_date))
        vulnerability_id = cursor.lastrowid
        
        parsed_vulnerabilities.append(vulnerability_id)

    conn.commit()
    conn.close()
    
    if not parsed_vulnerabilities:
        print("No vulnerabilities were parsed from the response data.")
        
    return parsed_vulnerabilities
